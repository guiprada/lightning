write_line("*** Welcome to lightning test suite Zzz :) ***")
{
	var os_string = get_os()
	var os = "Unknown"
	if (os_string:contains("Windows")){
		os = "Windows"
	} else if (os_string:contains("Unix")){
		os = "Unix"
	}

	write_line(get_os())

	var processor_count = machine.processor_count()
	if (processor_count > 1)
		write_line("Running on " .. processor_count .. " processors" )
	else
		write_line("Running Humbly on " .. processor_count .. " processor" )
}
if (intrinsic.create == null)
	write_line("No inline intrinsic support!")
else
	write_line("Inline intrinsic support! :)")

write_line("-- Starting tests --")
var start_time = time.now()

// Let's use some modules
var _assert = require("assert.ltn")
var assert_counter = require("assert_counter.ltn")

var assert = assert_counter.assert
var assert_not = assert_counter.assert_not
var count_errors = assert_counter.get_error_counter
var clear_errors = assert_counter.reset_error_counter

//////////////////////////////// scratch
{
	var a_table = [:]
	function a_table["he" .. "y"] (){
		return 99
	}
	assert(a_table["hey"](), 99, "Failed Expression Indexed Member Function Declaration Test 1.")
}
{
	var a_list = []
	try(
		list.init,
		[a_list, 5]
	)
	var a_table = [:]
	var common_table = [hey: "oba"]
	assert(try(
		table.set_extension_table,
		[a_table, common_table]
	), true, "Failed")
}

//////////////////////////////// end scratch

var errors = 0

errors += require("tests/anonymous_call.ltn")
errors += require("tests/assert.ltn")
errors += require("tests/assign_op.ltn")
errors += require("tests/boolean.ltn")
errors += require("tests/char.ltn")
errors += require("tests/closures.ltn")
errors += require("tests/compound_calls.ltn")
errors += require("tests/eval.ltn")
errors += require("tests/inline_intrinsics.ltn")
errors += require("tests/integers.ltn")
errors += require("tests/iterators.ltn")
errors += require("tests/lambdas.ltn")
errors += require("tests/lock.ltn")
errors += require("tests/map.ltn")
errors += require("tests/math.ltn")
errors += require("tests/maybe.ltn")
errors += require("tests/methods.ltn")
errors += require("tests/numbers.ltn")
errors += require("tests/nuples.ltn")
errors += require("tests/pmap.ltn")
errors += require("tests/reduce.ltn")
errors += require("tests/rmap.ltn")
errors += require("tests/scoping.ltn")
errors += require("tests/strings.ltn")
errors += require("tests/super_table.ltn")
errors += require("tests/table.ltn")
errors += require("tests/transient.ltn")
errors += require("tests/try.ltn")
errors += require("tests/up_value.ltn")
errors += require("tests/vm_management.ltn")



machine.trim()

if (errors == 0){
	write_line("No errors found! :)")
}
else{
	write(new_line())
	write_line(":( " .. errors .. " errors found!")
}
write_line("-- Finished tests! --")
write_line("Elapsed time: " .. start_time:elapsed() .. " ms")
// write_line("Loaded modules: " .. machine.modules())
// write_line(machine.memory_use())