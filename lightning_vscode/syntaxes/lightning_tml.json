{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "lightning",
	"scopeName": "source.lightning",
	"patterns": [
		{
            "name": "comment.line.note.lightning", 
            "match": "(//).*$\\n?", 
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.lightning"
                }
            }
        },
		{
			"begin": "\\b(function)\\s*(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:([\\.:])[a-zA-Z_][a-zA-Z0-9_]*)?)\\s*)?(\\()",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.lightning"
				},
				"2": {
					"name": "entity.name.function.lightning"
				},
				"3": {
					"name": "punctuation.separator.parameter.lightning"
				},
				"4": {
					"name": "punctuation.definition.parameters.begin.lightning"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.lightning"
				}
			},
			"name": "meta.function.lightning",
			"patterns": [
				{
					"match": "[a-zA-Z_][a-zA-Z0-9_]*",
					"name": "variable.parameter.function.lightning"
				},
				{
					"match": ",",
					"name": "punctuation.separator.arguments.lightning"
				}
			]
		},
		{
			"match": "(?<![\\w\\d.])\\d+(?![pPeE.0-9])",
			"name": "constant.numeric.integer.lightning"
		},
		{
			"match": "(?<![\\w\\d.])\\d+(\\.\\d+)?([eE]-?\\d*)?",
			"name": "constant.numeric.float.lightning"
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lightning"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.lightning"
				}
			},
			"name": "string.quoted.double.lightning",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lightning"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.lightning"
				}
			},
			"name": "string.quoted.single.lightning",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "(?<=\\.cdef)\\s*(\\[(=*)\\[)",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.lightning"
				},
				"1": {
					"name": "punctuation.definition.string.begin.lightning"
				}
			},
			"contentName": "meta.embedded.lightning",
			"end": "(\\]\\2\\])",
			"endCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.lightning"
				},
				"1": {
					"name": "punctuation.definition.string.end.lightning"
				}
			},
			"patterns": [
				{
					"include": "source.c"
				}
			]
		},
		{
			"begin": "(?<!--)\\[(=*)\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lightning"
				}
			},
			"end": "\\]\\1\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.lightning"
				}
			},
			"name": "string.quoted.other.multiline.lightning"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.control.goto.lightning"
				},
				"2": {
					"name": "constant.other.placeholder.lightning"
				}
			},
			"match": "\\b(goto)\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
		},
		{
			"captures": {
				"1": {
					"name": "punctuation.definition.label.begin.lightning"
				},
				"2": {
					"name": "punctuation.definition.label.end.lightning"
				}
			},
			"match": "(::)[a-zA-Z_][a-zA-Z0-9_]*(::)",
			"name": "constant.other.placeholder.lightning"
		},
		{
			"match": "\\b(else | for| if | return | while)\\b",
			"name": "keyword.control.lightning"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(false|null|true|_G|_VERSION|math\\.(pi|huge))\\b|(?<![.])\\.{3}(?!\\.)",
			"name": "constant.language.lightning"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(self)\\b",
			"name": "variable.language.self.lightning"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.function.lightning"
		},
		{
			"match": "(?<![^.]\\.|:)\\b(listMap\\.(indexOf|indexes|values|sum|shuffle|remove|range|slice|push|pop|pull)|string\\.(char|hasIndex|indexOf|len|lower|remove|upper)|table\\.(concat|insert|maxn|remove|sort)|math\\.(abs|acos|asin|atan|cos|pi|r|rnd|sign|sin|sqrt|tan)|io\\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(cpath|loaded|loadlib|path|preload|seeall))\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.function.library.lightning"
		},
		{
			"match": "\\b(and|or|not|xor|nand|nor|xnor)\\b",
			"name": "keyword.operator.lightning"
		},
		{
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.function.any-method.lightning"
		},
		{
			"match": "(?<=[^.]\\.|:)\\b([a-zA-Z_][a-zA-Z0-9_]*)",
			"name": "variable.other.lightning"
		},
		{
			"match": "\\+|-|%|#|\\*|\\/|\\^|==?|~=|<=?|>=?|(?<!\\.)\\.{2}(?!\\.)",
			"name": "keyword.operator.lightning"
		}
	],
	"repository": {
		"escaped_char": {
			"patterns": [
				{
					"match": "\\\\[abfnrtvz\\\\\"'\\n]",
					"name": "constant.character.escape.lightning"
				},
				{
					"match": "\\\\\\d{1,3}",
					"name": "constant.character.escape.byte.lightning"
				},
				{
					"match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]",
					"name": "constant.character.escape.byte.lightning"
				},
				{
					"match": "\\\\u\\{[0-9A-Fa-f]+\\}",
					"name": "constant.character.escape.unicode.lightning"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.character.escape.lightning"
				}
			]
		}
	}
}